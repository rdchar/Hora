hn:             assign? hs
?hs:            alpha | beta
alpha:          "<" a_simplex rel? time? mereonomy? immutable? where? ">"
beta:           "{" simplex rel? time? mereonomy? immutable? "}"
seq:            "(" NAME ("," NAME)+ ")"

?a_simplex:     a_vertex ("," a_vertex)*
?a_vertex:      vertex | seq

simplex:        vertex ("," vertex)*
vertex:         (NAME | sequence | assign? hs) type?

sequence:       "(" NAME ")"
assign:         NAME "="
rel:            ";" "R_" NAME
time:           ";" "T_" DIGIT+
mereonomy:      ";" "M_" NAME
immutable:      ";" IMMUTABLE

type:           ":" NAME

where:          "|" expr
?expr:           NAME
              | "lambda" NAME "." expr
              | "\\" NAME "." expr
              | expr expr
              | "(" expr ")"

NAME:           LETTER (LETTER | DIGIT | "-" | "_" | "^")*
IMMUTABLE:      "I"

%ignore WS
%import common.LETTER
%import common.DIGIT
%import common.WS
%import common.NEWLINE
