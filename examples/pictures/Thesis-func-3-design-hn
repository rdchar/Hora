strict graph Hn {
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"use-cases" [label="use-cases"]
	node [shape=record style=rounded]
	"OO-function" [label="{OO-function\nB(OO, Function, Design)|{<use-cases> use-cases}}"]
	node [shape=ellipse style=solid]
	hierarchy [label=hierarchy]
	node [shape=ellipse style=solid]
	heterarchy [label=heterarchy]
	node [shape=record style=rounded]
	soup [label="{soup\nB(Design, HT, Structure, Model, Function)|{<hierarchy> hierarchy | <heterarchy> heterarchy}}"]
	node [shape=ellipse style=solid]
	Hn [label=Hn]
	node [shape=record style=rounded]
	"HT-function" [label="{HT-function\nB(Function, Design, HT)|{<soup> soup | <Hn> Hn}}"]
	node [shape=record style=rounded]
	Function [label="{Function\nB(Function, Design)|{<OO-function> OO-function | <HT-function> HT-function}}"]
	node [shape=ellipse style=solid]
	methods [label=methods]
	node [shape=ellipse style=solid]
	internal [label=internal]
	node [shape=record style=solid]
	"OO-behaviour" [label="{OO-behaviour\nB(OO, Design, Behaviour)|{<methods> methods | <internal> internal}}"]
	node [shape=ellipse style=solid]
	"functional-schema" [label="functional-schema"]
	node [shape=record style=solid]
	"FM-behaviour" [label="{FM-behaviour\nB(Design, Behaviour, FM)|{<functional-schema> functional-schema | <internal> internal}}"]
	node [shape=ellipse style=solid]
	Hs [label=Hs]
	node [shape=ellipse style=solid]
	binary [label=binary]
	node [shape=ellipse style=solid]
	"n-ary" [label="n-ary"]
	node [shape=ellipse style=solid]
	DL [label=DL]
	node [shape=ellipse style=solid]
	"lambda-calc" [label="lambda-calc"]
	node [shape=ellipse style=solid]
	logical [label=logical]
	node [shape=ellipse style=solid]
	multilevel [label=multilevel]
	node [shape=ellipse style=solid]
	"alpha-aggregation" [label="alpha-aggregation"]
	node [shape=ellipse style=solid]
	"beta-aggregation" [label="beta-aggregation"]
	node [shape=record style=rounded]
	Rel [label="{Rel\nB(Design, HT, Canonical-Language, Orchestration, Structure, Behaviour, Ontology)|{<binary> binary | <n-ary> n-ary | <DL> DL | <lambda-calc> lambda-calc | <logical> logical | <multilevel> multilevel | <alpha-aggregation> alpha-aggregation | <beta-aggregation> beta-aggregation}}"]
	node [shape=ellipse style=solid]
	external [label=external]
	node [shape=record style=solid]
	"HT-behaviour" [label="{HT-behaviour\nB(Design, HT, Behaviour)|{<Hn> Hn | <Hs> Hs | <Rel> Rel | <external> external}}"]
	node [shape=record style=rounded]
	Behaviour [label="{Behaviour\nB(Behaviour, Design)|{<OO-behaviour> OO-behaviour | <FM-behaviour> FM-behaviour | <HT-behaviour> HT-behaviour}}"]
	node [shape=ellipse style=solid]
	polymorphism [label=polymorphism]
	node [shape=ellipse style=solid]
	abstract [label=abstract]
	node [shape=ellipse style=solid]
	concrete [label=concrete]
	node [shape=ellipse style=solid]
	instatiation [label=instatiation]
	node [shape=record style=rounded]
	abstraction [label="{abstraction\nB(Design, Stucture, Structure, Model, OO)|{<abstract> abstract | <concrete> concrete | <instatiation> instatiation}}"]
	node [shape=record style=solid]
	inheritance [label="{inheritance\nB(Design, Structure, Model, OO)|{<hierarchy> hierarchy | <polymorphism> polymorphism | <abstraction> abstraction}}"]
	node [shape=ellipse style=solid]
	categorisation [label=categorisation]
	node [shape=ellipse style=solid]
	containment [label=containment]
	node [shape=ellipse style=solid]
	relational [label=relational]
	node [shape=record style=rounded]
	taxonomy [label="{taxonomy\nB(Design, HT, Canonical-Language, Structure, Model, OO, FO, Ontology)|{<hierarchy> hierarchy | <beta-aggregation> beta-aggregation}}"]
	node [shape=ellipse style=solid]
	schema [label=schema]
	node [shape=ellipse style=solid]
	universal [label=universal]
	node [shape=ellipse style=solid]
	boundary [label=boundary]
	node [shape=record style=rounded]
	class [label="{class\nB(Design, Structure, OO, FO, Ontology)|{<schema> schema | <universal> universal | <boundary> boundary}}"]
	node [shape=ellipse style=solid]
	object [label=object]
	node [shape=ellipse style=solid]
	aggregation [label=aggregation]
	node [shape=ellipse style=solid]
	composition [label=composition]
	node [shape=record style=rounded]
	association [label="{association\nB(Structure, OO, Design)|{<aggregation> aggregation | <composition> composition | <n-ary> n-ary}}"]
	node [shape=record style=rounded]
	"OO-elements" [label="{OO-elements\nB(Structure, OO, Design)|{<class> class | <object> object | <association> association | <n-ary> n-ary}}"]
	node [shape=record style=solid]
	"OO-structure" [label="{OO-structure\nB(Structure, OO, Design)|{<inheritance> inheritance | <categorisation> categorisation | <containment> containment | <relational> relational | <taxonomy> taxonomy | <OO-elements> OO-elements}}"]
	node [shape=record style=rounded]
	"FO-elements" [label="{FO-elements\nB(Design, Structure, FO, Ontology)|{<object> object | <class> class | <binary> binary | <DL> DL}}"]
	node [shape=record style=solid]
	"FO-structure" [label="{FO-structure\nB(Design, Structure, FO, Ontology)|{<relational> relational | <taxonomy> taxonomy | <FO-elements> FO-elements}}"]
	node [shape=record style=rounded]
	"FM-elements" [label="{FM-elements\nB(Structure, Design, FM)|{<schema> schema}}"]
	node [shape=record style=solid]
	"FM-structure" [label="{FM-structure\nB(Structure, Design, FM)|{<FM-elements> FM-elements}}"]
	node [shape=ellipse style=solid]
	simplex [label=simplex]
	node [shape=ellipse style=solid]
	vertex [label=vertex]
	node [shape=ellipse style=solid]
	time [label=time]
	node [shape=ellipse style=solid]
	property [label=property]
	node [shape=record style=rounded]
	"HT-elements" [label="{HT-elements\nB(Design, HT, Canonical-Language, Orchestration, Structure, Ontology)|{<Hn> Hn | <Hs> Hs | <simplex> simplex | <vertex> vertex | <Rel> Rel | <time> time | <alpha-aggregation> alpha-aggregation | <beta-aggregation> beta-aggregation | <boundary> boundary | <property> property}}"]
	node [shape=ellipse style=solid]
	polygons [label=polygons]
	node [shape=record style=rounded]
	multidimensional [label="{multidimensional\nB(Design, HT, Canonical-Language, Structure, Model, Ontology)|{<n-ary> n-ary | <polygons> polygons}}"]
	node [shape=record style=solid]
	"HT-structure" [label="{HT-structure\nB(Design, HT, Canonical-Language, Structure, Ontology)|{<categorisation> categorisation | <containment> containment | <relational> relational | <HT-elements> HT-elements | <multilevel> multilevel | <multidimensional> multidimensional | <heterarchy> heterarchy | <hierarchy> hierarchy | <n-ary> n-ary | <taxonomy> taxonomy | <HT-elements> HT-elements}}"]
	node [shape=record style=rounded]
	Structure [label="{Structure\nB(Structure, Design)|{<OO-structure> OO-structure | <FO-structure> FO-structure | <FM-structure> FM-structure | <HT-structure> HT-structure}}"]
	node [shape=record style=rounded]
	Design [label="{Design\nB(Design)|{<Function> Function | <Behaviour> Behaviour | <Structure> Structure}}"]
	node [shape=record style=solid]
	Design:Function -- Function
	Design:Behaviour -- Behaviour
	Design:Structure -- Structure
	node [shape=record style=rounded]
	Function [label="{Function\nB(Function, Design)|{<OO-function> OO-function | <HT-function> HT-function}}"]
	node [shape=record style=solid]
	Function:"OO-function" -- "OO-function"
	Function:"HT-function" -- "HT-function"
	node [shape=record style=rounded]
	Behaviour [label="{Behaviour\nB(Behaviour, Design)|{<OO-behaviour> OO-behaviour | <FM-behaviour> FM-behaviour | <HT-behaviour> HT-behaviour}}"]
	node [shape=record style=solid]
	Behaviour:"OO-behaviour" -- "OO-behaviour"
	Behaviour:"FM-behaviour" -- "FM-behaviour"
	Behaviour:"HT-behaviour" -- "HT-behaviour"
	node [shape=record style=rounded]
	Structure [label="{Structure\nB(Structure, Design)|{<OO-structure> OO-structure | <FO-structure> FO-structure | <FM-structure> FM-structure | <HT-structure> HT-structure}}"]
	node [shape=record style=solid]
	Structure:"OO-structure" -- "OO-structure"
	Structure:"FO-structure" -- "FO-structure"
	Structure:"FM-structure" -- "FM-structure"
	Structure:"HT-structure" -- "HT-structure"
	node [shape=record style=rounded]
	"OO-function" [label="{OO-function\nB(OO, Function, Design)|{<use-cases> use-cases}}"]
	node [shape=record style=solid]
	"OO-function":"use-cases" -- "use-cases"
	node [shape=record style=rounded]
	"HT-function" [label="{HT-function\nB(Function, Design, HT)|{<soup> soup | <Hn> Hn}}"]
	node [shape=record style=solid]
	"HT-function":soup -- soup
	"HT-function":Hn -- Hn
	node [shape=record style=solid]
	"OO-behaviour" [label="{OO-behaviour\nB(OO, Design, Behaviour)|{<methods> methods | <internal> internal}}"]
	node [shape=record style=solid]
	"OO-behaviour":methods -- methods
	"OO-behaviour":internal -- internal
	node [shape=record style=solid]
	"FM-behaviour" [label="{FM-behaviour\nB(Design, Behaviour, FM)|{<functional-schema> functional-schema | <internal> internal}}"]
	node [shape=record style=solid]
	"FM-behaviour":"functional-schema" -- "functional-schema"
	"FM-behaviour":internal -- internal
	node [shape=record style=solid]
	"HT-behaviour" [label="{HT-behaviour\nB(Design, HT, Behaviour)|{<Hn> Hn | <Hs> Hs | <Rel> Rel | <external> external}}"]
	node [shape=record style=solid]
	"HT-behaviour":Hn -- Hn
	"HT-behaviour":Hs -- Hs
	"HT-behaviour":Rel -- Rel
	"HT-behaviour":external -- external
	node [shape=record style=solid]
	"OO-structure" [label="{OO-structure\nB(Structure, OO, Design)|{<inheritance> inheritance | <categorisation> categorisation | <containment> containment | <relational> relational | <taxonomy> taxonomy | <OO-elements> OO-elements}}"]
	node [shape=record style=solid]
	"OO-structure":inheritance -- inheritance
	"OO-structure":categorisation -- categorisation
	"OO-structure":containment -- containment
	"OO-structure":relational -- relational
	"OO-structure":taxonomy -- taxonomy
	"OO-structure":"OO-elements" -- "OO-elements"
	node [shape=record style=solid]
	"FO-structure" [label="{FO-structure\nB(Design, Structure, FO, Ontology)|{<relational> relational | <taxonomy> taxonomy | <FO-elements> FO-elements}}"]
	node [shape=record style=solid]
	"FO-structure":relational -- relational
	"FO-structure":taxonomy -- taxonomy
	"FO-structure":"FO-elements" -- "FO-elements"
	node [shape=record style=solid]
	"FM-structure" [label="{FM-structure\nB(Structure, Design, FM)|{<FM-elements> FM-elements}}"]
	node [shape=record style=solid]
	"FM-structure":"FM-elements" -- "FM-elements"
	node [shape=record style=solid]
	"HT-structure" [label="{HT-structure\nB(Design, HT, Canonical-Language, Structure, Ontology)|{<categorisation> categorisation | <containment> containment | <relational> relational | <HT-elements> HT-elements | <multilevel> multilevel | <multidimensional> multidimensional | <heterarchy> heterarchy | <hierarchy> hierarchy | <n-ary> n-ary | <taxonomy> taxonomy | <HT-elements> HT-elements}}"]
	node [shape=record style=solid]
	"HT-structure":categorisation -- categorisation
	"HT-structure":containment -- containment
	"HT-structure":relational -- relational
	"HT-structure":"HT-elements" -- "HT-elements"
	"HT-structure":multilevel -- multilevel
	"HT-structure":multidimensional -- multidimensional
	"HT-structure":heterarchy -- heterarchy
	"HT-structure":hierarchy -- hierarchy
	"HT-structure":"n-ary" -- "n-ary"
	"HT-structure":taxonomy -- taxonomy
	"HT-structure":"HT-elements" -- "HT-elements"
	node [shape=ellipse style=solid]
	"use-cases" [label="use-cases"]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	soup [label="{soup\nB(Design, HT, Structure, Model, Function)|{<hierarchy> hierarchy | <heterarchy> heterarchy}}"]
	node [shape=record style=solid]
	soup:hierarchy -- hierarchy
	soup:heterarchy -- heterarchy
	node [shape=ellipse style=solid]
	Hn [label=Hn]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	methods [label=methods]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	internal [label=internal]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"functional-schema" [label="functional-schema"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	Hs [label=Hs]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	Rel [label="{Rel\nB(Design, HT, Canonical-Language, Orchestration, Structure, Behaviour, Ontology)|{<binary> binary | <n-ary> n-ary | <DL> DL | <lambda-calc> lambda-calc | <logical> logical | <multilevel> multilevel | <alpha-aggregation> alpha-aggregation | <beta-aggregation> beta-aggregation}}"]
	node [shape=record style=solid]
	Rel:binary -- binary
	Rel:"n-ary" -- "n-ary"
	Rel:DL -- DL
	Rel:"lambda-calc" -- "lambda-calc"
	Rel:logical -- logical
	Rel:multilevel -- multilevel
	Rel:"alpha-aggregation" -- "alpha-aggregation"
	Rel:"beta-aggregation" -- "beta-aggregation"
	node [shape=ellipse style=solid]
	external [label=external]
	node [shape=record style=solid]
	node [shape=record style=solid]
	inheritance [label="{inheritance\nB(Design, Structure, Model, OO)|{<hierarchy> hierarchy | <polymorphism> polymorphism | <abstraction> abstraction}}"]
	node [shape=record style=solid]
	inheritance:hierarchy -- hierarchy
	inheritance:polymorphism -- polymorphism
	inheritance:abstraction -- abstraction
	node [shape=ellipse style=solid]
	categorisation [label=categorisation]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	containment [label=containment]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	relational [label=relational]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	taxonomy [label="{taxonomy\nB(Design, HT, Canonical-Language, Structure, Model, OO, FO, Ontology)|{<hierarchy> hierarchy | <beta-aggregation> beta-aggregation}}"]
	node [shape=record style=solid]
	taxonomy:hierarchy -- hierarchy
	taxonomy:"beta-aggregation" -- "beta-aggregation"
	node [shape=record style=rounded]
	"OO-elements" [label="{OO-elements\nB(Structure, OO, Design)|{<class> class | <object> object | <association> association | <n-ary> n-ary}}"]
	node [shape=record style=solid]
	"OO-elements":class -- class
	"OO-elements":object -- object
	"OO-elements":association -- association
	"OO-elements":"n-ary" -- "n-ary"
	node [shape=record style=rounded]
	"FO-elements" [label="{FO-elements\nB(Design, Structure, FO, Ontology)|{<object> object | <class> class | <binary> binary | <DL> DL}}"]
	node [shape=record style=solid]
	"FO-elements":object -- object
	"FO-elements":class -- class
	"FO-elements":binary -- binary
	"FO-elements":DL -- DL
	node [shape=record style=rounded]
	"FM-elements" [label="{FM-elements\nB(Structure, Design, FM)|{<schema> schema}}"]
	node [shape=record style=solid]
	"FM-elements":schema -- schema
	node [shape=record style=rounded]
	"HT-elements" [label="{HT-elements\nB(Design, HT, Canonical-Language, Orchestration, Structure, Ontology)|{<Hn> Hn | <Hs> Hs | <simplex> simplex | <vertex> vertex | <Rel> Rel | <time> time | <alpha-aggregation> alpha-aggregation | <beta-aggregation> beta-aggregation | <boundary> boundary | <property> property}}"]
	node [shape=record style=solid]
	"HT-elements":Hn -- Hn
	"HT-elements":Hs -- Hs
	"HT-elements":simplex -- simplex
	"HT-elements":vertex -- vertex
	"HT-elements":Rel -- Rel
	"HT-elements":time -- time
	"HT-elements":"alpha-aggregation" -- "alpha-aggregation"
	"HT-elements":"beta-aggregation" -- "beta-aggregation"
	"HT-elements":boundary -- boundary
	"HT-elements":property -- property
	node [shape=ellipse style=solid]
	multilevel [label=multilevel]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	multidimensional [label="{multidimensional\nB(Design, HT, Canonical-Language, Structure, Model, Ontology)|{<n-ary> n-ary | <polygons> polygons}}"]
	node [shape=record style=solid]
	multidimensional:"n-ary" -- "n-ary"
	multidimensional:polygons -- polygons
	node [shape=ellipse style=solid]
	heterarchy [label=heterarchy]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	hierarchy [label=hierarchy]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"n-ary" [label="n-ary"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	polygons [label=polygons]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"beta-aggregation" [label="beta-aggregation"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	abstract [label=abstract]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	concrete [label=concrete]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	proof [label=proof]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	abstraction [label="{abstraction\nB(Design, Stucture, Structure, Model, OO)|{<abstract> abstract | <concrete> concrete | <instatiation> instatiation}}"]
	node [shape=record style=solid]
	abstraction:abstract -- abstract
	abstraction:concrete -- concrete
	abstraction:instatiation -- instatiation
	node [shape=ellipse style=solid]
	instatiation [label=instatiation]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	nomenclature [label=nomenclature]
	node [shape=ellipse style=solid]
	"ubiquitous-language" [label="ubiquitous-language"]
	node [shape=record style=solid]
	ontological [label="{ontological\nB(Design, HT, Model, OO, FO, Ontology)|{<nomenclature> nomenclature | <ubiquitous-language> ubiquitous-language}}"]
	node [shape=record style=solid]
	ontological:nomenclature -- nomenclature
	ontological:"ubiquitous-language" -- "ubiquitous-language"
	node [shape=ellipse style=solid]
	nomenclature [label=nomenclature]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"ubiquitous-language" [label="ubiquitous-language"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	vertex [label=vertex]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	class [label="{class\nB(Design, Structure, OO, FO, Ontology)|{<schema> schema | <universal> universal | <boundary> boundary}}"]
	node [shape=record style=solid]
	class:schema -- schema
	class:universal -- universal
	class:boundary -- boundary
	node [shape=ellipse style=solid]
	schema [label=schema]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	universal [label=universal]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	boundary [label=boundary]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	object [label=object]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	binary [label=binary]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	DL [label=DL]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"lambda-calc" [label="lambda-calc"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	logical [label=logical]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"alpha-aggregation" [label="alpha-aggregation"]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	association [label="{association\nB(Structure, OO, Design)|{<aggregation> aggregation | <composition> composition | <n-ary> n-ary}}"]
	node [shape=record style=solid]
	association:aggregation -- aggregation
	association:composition -- composition
	association:"n-ary" -- "n-ary"
	node [shape=ellipse style=solid]
	aggregation [label=aggregation]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	composition [label=composition]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	diagramatic [label=diagramatic]
	node [shape=record style=solid]
	"OO-notation" [label="{OO-notation\nB(OO, Design, Notation)|{<diagramatic> diagramatic}}"]
	node [shape=ellipse style=solid]
	"data-hiding" [label="data-hiding"]
	node [shape=ellipse style=solid]
	method [label=method]
	node [shape=record style=rounded]
	encapsulation [label="{encapsulation\nB(Model, OO, Design)|{<data-hiding> data-hiding | <method> method}}"]
	node [shape=ellipse style=solid]
	"explicit-R" [label="explicit-R"]
	node [shape=record style=solid]
	ontological [label="{ontological\nB(Design, HT, Model, OO, FO, Ontology)|{<nomenclature> nomenclature | <ubiquitous-language> ubiquitous-language}}"]
	node [shape=record style=rounded]
	"OO-concepts" [label="{OO-concepts\nB(Model, OO, Design)|{<inheritance> inheritance | <abstraction> abstraction | <polymorphism> polymorphism | <encapsulation> encapsulation | <categorisation> categorisation | <containment> containment | <explicit-R> explicit-R | <ontological> ontological | <instatiation> instatiation | <concrete> concrete | <abstract> abstract}}"]
	node [shape=ellipse style=solid]
	analysis [label=analysis]
	node [shape=ellipse style=solid]
	design [label=design]
	node [shape=ellipse style=solid]
	programming [label=programming]
	node [shape=ellipse style=solid]
	"software-specification" [label="software-specification"]
	node [shape=record style=rounded]
	"OO-uses" [label="{OO-uses\nB(OO, Design)|{<analysis> analysis | <design> design | <programming> programming | <software-specification> software-specification}}"]
	node [shape=ellipse style=solid]
	proof [label=proof]
	node [shape=record style=rounded]
	"OO-actions" [label="{OO-actions\nB(OO, Design, Actions)|{<polymorphism> polymorphism | <proof> proof}}"]
	node [shape=record style=solid]
	"OO-design" [label="{OO-design\nB(OO, Design)|{<OO-function> OO-function | <OO-behaviour> OO-behaviour | <OO-structure> OO-structure}}"]
	node [shape=record style=solid]
	"OO-ontology" [label="{OO-ontology\nB(OO, Design, Ontology)|{<class> class | <object> object | <categorisation> categorisation | <containment> containment}}"]
	node [shape=record style=solid]
	OO [label="{OO\nB(OO, Design)|{<OO-elements> OO-elements | <OO-notation> OO-notation | <OO-concepts> OO-concepts | <OO-uses> OO-uses | <OO-actions> OO-actions | <OO-design> OO-design | <OO-ontology> OO-ontology}}"]
	node [shape=record style=solid]
	OO:"OO-elements" -- "OO-elements"
	OO:"OO-notation" -- "OO-notation"
	OO:"OO-concepts" -- "OO-concepts"
	OO:"OO-uses" -- "OO-uses"
	OO:"OO-actions" -- "OO-actions"
	OO:"OO-design" -- "OO-design"
	OO:"OO-ontology" -- "OO-ontology"
	node [shape=record style=solid]
	"OO-notation" [label="{OO-notation\nB(OO, Design, Notation)|{<diagramatic> diagramatic}}"]
	node [shape=record style=solid]
	"OO-notation":diagramatic -- diagramatic
	node [shape=record style=rounded]
	"OO-concepts" [label="{OO-concepts\nB(Model, OO, Design)|{<inheritance> inheritance | <abstraction> abstraction | <polymorphism> polymorphism | <encapsulation> encapsulation | <categorisation> categorisation | <containment> containment | <explicit-R> explicit-R | <ontological> ontological | <instatiation> instatiation | <concrete> concrete | <abstract> abstract}}"]
	node [shape=record style=solid]
	"OO-concepts":inheritance -- inheritance
	"OO-concepts":abstraction -- abstraction
	"OO-concepts":polymorphism -- polymorphism
	"OO-concepts":encapsulation -- encapsulation
	"OO-concepts":categorisation -- categorisation
	"OO-concepts":containment -- containment
	"OO-concepts":"explicit-R" -- "explicit-R"
	"OO-concepts":ontological -- ontological
	"OO-concepts":instatiation -- instatiation
	"OO-concepts":concrete -- concrete
	"OO-concepts":abstract -- abstract
	node [shape=record style=rounded]
	"OO-uses" [label="{OO-uses\nB(OO, Design)|{<analysis> analysis | <design> design | <programming> programming | <software-specification> software-specification}}"]
	node [shape=record style=solid]
	"OO-uses":analysis -- analysis
	"OO-uses":design -- design
	"OO-uses":programming -- programming
	"OO-uses":"software-specification" -- "software-specification"
	node [shape=record style=rounded]
	"OO-actions" [label="{OO-actions\nB(OO, Design, Actions)|{<polymorphism> polymorphism | <proof> proof}}"]
	node [shape=record style=solid]
	"OO-actions":polymorphism -- polymorphism
	"OO-actions":proof -- proof
	node [shape=record style=solid]
	"OO-design" [label="{OO-design\nB(OO, Design)|{<OO-function> OO-function | <OO-behaviour> OO-behaviour | <OO-structure> OO-structure}}"]
	node [shape=record style=solid]
	"OO-design":"OO-function" -- "OO-function"
	"OO-design":"OO-behaviour" -- "OO-behaviour"
	"OO-design":"OO-structure" -- "OO-structure"
	node [shape=record style=solid]
	"OO-ontology" [label="{OO-ontology\nB(OO, Design, Ontology)|{<class> class | <object> object | <categorisation> categorisation | <containment> containment}}"]
	node [shape=record style=solid]
	"OO-ontology":class -- class
	"OO-ontology":object -- object
	"OO-ontology":categorisation -- categorisation
	"OO-ontology":containment -- containment
	node [shape=ellipse style=solid]
	"explicit-R" [label="explicit-R"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	diagramatic [label=diagramatic]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	polymorphism [label=polymorphism]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	encapsulation [label="{encapsulation\nB(Model, OO, Design)|{<data-hiding> data-hiding | <method> method}}"]
	node [shape=record style=solid]
	encapsulation:"data-hiding" -- "data-hiding"
	encapsulation:method -- method
	node [shape=ellipse style=solid]
	analysis [label=analysis]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	design [label=design]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	programming [label=programming]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"software-specification" [label="software-specification"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"data-hiding" [label="data-hiding"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	method [label=method]
	node [shape=record style=solid]
	node [shape=record style=solid]
	"FM-design" [label="{FM-design\nB(Design, FM)|{<FM-behaviour> FM-behaviour | <FM-structure> FM-structure}}"]
	node [shape=record style=solid]
	"FM-design":"FM-behaviour" -- "FM-behaviour"
	"FM-design":"FM-structure" -- "FM-structure"
	node [shape=record style=solid]
	"FO-design" [label="{FO-design\nB(Ontology, FO, Design)|{<FO-structure> FO-structure}}"]
	node [shape=record style=solid]
	"FO-design":"FO-structure" -- "FO-structure"
	node [shape=ellipse style=solid]
	simplex [label=simplex]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	time [label=time]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	property [label=property]
	node [shape=record style=solid]
	node [shape=record style=solid]
	"HT-design" [label="{HT-design\nB(Design, HT)|{<HT-function> HT-function | <HT-behaviour> HT-behaviour | <HT-structure> HT-structure}}"]
	node [shape=record style=solid]
	"HT-design":"HT-function" -- "HT-function"
	"HT-design":"HT-behaviour" -- "HT-behaviour"
	"HT-design":"HT-structure" -- "HT-structure"
	rankdir=LR
}
