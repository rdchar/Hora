strict graph Hn {
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"use-cases" [label="use-cases"]
	node [shape=record style=rounded]
	"OO-function" [label="{OO-function\nB(OO, Function, Design)|{<use-cases> use-cases}}"]
	node [shape=ellipse style=solid]
	hierarchy [label=hierarchy]
	node [shape=ellipse style=solid]
	heterarchy [label=heterarchy]
	node [shape=record style=rounded]
	soup [label="{soup\nB(Design, HT, Structure, Model, Function)|{<hierarchy> hierarchy | <heterarchy> heterarchy}}"]
	node [shape=ellipse style=solid]
	Hn [label=Hn]
	node [shape=record style=rounded]
	"HT-function" [label="{HT-function\nB(Function, Design, HT)|{<soup> soup | <Hn> Hn}}"]
	node [shape=record style=rounded]
	Function [label="{Function\nB(Function, Design)|{<OO-function> OO-function | <HT-function> HT-function}}"]
	node [shape=ellipse style=solid]
	methods [label=methods]
	node [shape=ellipse style=solid]
	internal [label=internal]
	node [shape=record style=solid]
	"OO-behaviour" [label="{OO-behaviour\nB(OO, Design, Behaviour)|{<methods> methods | <internal> internal}}"]
	node [shape=ellipse style=solid]
	"functional-schema" [label="functional-schema"]
	node [shape=record style=solid]
	"FM-behaviour" [label="{FM-behaviour\nB(Design, Behaviour, FM)|{<functional-schema> functional-schema | <internal> internal}}"]
	node [shape=ellipse style=solid]
	Hs [label=Hs]
	node [shape=ellipse style=solid]
	binary [label=binary]
	node [shape=ellipse style=solid]
	"n-ary" [label="n-ary"]
	node [shape=ellipse style=solid]
	DL [label=DL]
	node [shape=ellipse style=solid]
	"lambda-calc" [label="lambda-calc"]
	node [shape=ellipse style=solid]
	logical [label=logical]
	node [shape=ellipse style=solid]
	multilevel [label=multilevel]
	node [shape=ellipse style=solid]
	"alpha-aggregation" [label="alpha-aggregation"]
	node [shape=ellipse style=solid]
	"beta-aggregation" [label="beta-aggregation"]
	node [shape=record style=rounded]
	Rel [label="{Rel\nB(Design, HT, Canonical-Language, Structure, Behaviour, Ontology)|{<binary> binary | <n-ary> n-ary | <DL> DL | <lambda-calc> lambda-calc | <logical> logical | <multilevel> multilevel | <alpha-aggregation> alpha-aggregation | <beta-aggregation> beta-aggregation}}"]
	node [shape=ellipse style=solid]
	external [label=external]
	node [shape=record style=solid]
	"HT-behaviour" [label="{HT-behaviour\nB(Design, HT, Behaviour)|{<Hn> Hn | <Hs> Hs | <Rel> Rel | <external> external}}"]
	node [shape=record style=rounded]
	Behaviour [label="{Behaviour\nB(Behaviour, Design)|{<OO-behaviour> OO-behaviour | <FM-behaviour> FM-behaviour | <HT-behaviour> HT-behaviour}}"]
	node [shape=ellipse style=solid]
	polymorphism [label=polymorphism]
	node [shape=ellipse style=solid]
	abstract [label=abstract]
	node [shape=ellipse style=solid]
	concrete [label=concrete]
	node [shape=ellipse style=solid]
	instatiation [label=instatiation]
	node [shape=record style=rounded]
	abstraction [label="{abstraction\nB(Design, Stucture, Structure, Model, OO)|{<abstract> abstract | <concrete> concrete | <instatiation> instatiation}}"]
	node [shape=record style=solid]
	inheritance [label="{inheritance\nB(Design, Structure, Model, OO)|{<hierarchy> hierarchy | <polymorphism> polymorphism | <abstraction> abstraction}}"]
	node [shape=ellipse style=solid]
	categorisation [label=categorisation]
	node [shape=ellipse style=solid]
	containment [label=containment]
	node [shape=ellipse style=solid]
	relational [label=relational]
	node [shape=record style=rounded]
	taxonomy [label="{taxonomy\nB(Design, HT, Canonical-Language, Structure, Model, OO, FO, Ontology)|{<hierarchy> hierarchy | <beta-aggregation> beta-aggregation}}"]
	node [shape=ellipse style=solid]
	schema [label=schema]
	node [shape=ellipse style=solid]
	universal [label=universal]
	node [shape=ellipse style=solid]
	boundary [label=boundary]
	node [shape=record style=rounded]
	class [label="{class\nB(Design, Structure, OO, FO, Ontology)|{<schema> schema | <universal> universal | <boundary> boundary}}"]
	node [shape=ellipse style=solid]
	object [label=object]
	node [shape=ellipse style=solid]
	aggregation [label=aggregation]
	node [shape=ellipse style=solid]
	composition [label=composition]
	node [shape=record style=rounded]
	association [label="{association\nB(Structure, OO, Design)|{<aggregation> aggregation | <composition> composition | <n-ary> n-ary}}"]
	node [shape=record style=rounded]
	"OO-elements" [label="{OO-elements\nB(Structure, OO, Design)|{<class> class | <object> object | <association> association | <n-ary> n-ary}}"]
	node [shape=record style=solid]
	"OO-structure" [label="{OO-structure\nB(Structure, OO, Design)|{<inheritance> inheritance | <categorisation> categorisation | <containment> containment | <relational> relational | <taxonomy> taxonomy | <OO-elements> OO-elements}}"]
	node [shape=record style=rounded]
	"FO-elements" [label="{FO-elements\nB(Design, Structure, FO, Ontology)|{<object> object | <class> class | <binary> binary | <DL> DL}}"]
	node [shape=record style=solid]
	"FO-structure" [label="{FO-structure\nB(Design, Structure, FO, Ontology)|{<relational> relational | <taxonomy> taxonomy | <FO-elements> FO-elements}}"]
	node [shape=record style=rounded]
	"FM-elements" [label="{FM-elements\nB(Structure, Design, FM)|{<schema> schema}}"]
	node [shape=record style=solid]
	"FM-structure" [label="{FM-structure\nB(Structure, Design, FM)|{<FM-elements> FM-elements}}"]
	node [shape=ellipse style=solid]
	simplex [label=simplex]
	node [shape=ellipse style=solid]
	vertex [label=vertex]
	node [shape=ellipse style=solid]
	time [label=time]
	node [shape=ellipse style=solid]
	property [label=property]
	node [shape=record style=rounded]
	"HT-elements" [label="{HT-elements\nB(HT, Design, Canonical-Language, Orchestration, Structure, Ontology)|{<Hn> Hn | <Hs> Hs | <simplex> simplex | <vertex> vertex | <Rel> Rel | <time> time | <alpha-aggregation> alpha-aggregation | <beta-aggregation> beta-aggregation | <boundary> boundary | <property> property}}"]
	node [shape=ellipse style=solid]
	polygons [label=polygons]
	node [shape=record style=rounded]
	multidimensional [label="{multidimensional\nB(HT, Design, Canonical-Language, Structure, Model, Ontology)|{<n-ary> n-ary | <polygons> polygons}}"]
	node [shape=record style=solid]
	"HT-structure" [label="{HT-structure\nB(Design, HT, Canonical-Language, Structure, Ontology)|{<categorisation> categorisation | <containment> containment | <relational> relational | <HT-elements> HT-elements | <multilevel> multilevel | <multidimensional> multidimensional | <heterarchy> heterarchy | <hierarchy> hierarchy | <n-ary> n-ary | <taxonomy> taxonomy | <HT-elements> HT-elements}}"]
	node [shape=record style=rounded]
	Structure [label="{Structure\nB(Structure, Design)|{<OO-structure> OO-structure | <FO-structure> FO-structure | <FM-structure> FM-structure | <HT-structure> HT-structure}}"]
	node [shape=record style=rounded]
	Design [label="{Design\nB(Design)|{<Function> Function | <Behaviour> Behaviour | <Structure> Structure}}"]
	node [shape=record style=solid]
	Design:Function -- Function
	Design:Behaviour -- Behaviour
	Design:Structure -- Structure
	node [shape=record style=rounded]
	Function [label="{Function\nB(Function, Design)|{<OO-function> OO-function | <HT-function> HT-function}}"]
	node [shape=record style=solid]
	Function:"OO-function" -- "OO-function"
	Function:"HT-function" -- "HT-function"
	node [shape=record style=rounded]
	Behaviour [label="{Behaviour\nB(Behaviour, Design)|{<OO-behaviour> OO-behaviour | <FM-behaviour> FM-behaviour | <HT-behaviour> HT-behaviour}}"]
	node [shape=record style=solid]
	Behaviour:"OO-behaviour" -- "OO-behaviour"
	Behaviour:"FM-behaviour" -- "FM-behaviour"
	Behaviour:"HT-behaviour" -- "HT-behaviour"
	node [shape=record style=rounded]
	Structure [label="{Structure\nB(Structure, Design)|{<OO-structure> OO-structure | <FO-structure> FO-structure | <FM-structure> FM-structure | <HT-structure> HT-structure}}"]
	node [shape=record style=solid]
	Structure:"OO-structure" -- "OO-structure"
	Structure:"FO-structure" -- "FO-structure"
	Structure:"FM-structure" -- "FM-structure"
	Structure:"HT-structure" -- "HT-structure"
	node [shape=record style=rounded]
	"OO-function" [label="{OO-function\nB(OO, Function, Design)|{<use-cases> use-cases}}"]
	node [shape=record style=solid]
	"OO-function":"use-cases" -- "use-cases"
	node [shape=record style=rounded]
	"HT-function" [label="{HT-function\nB(Function, Design, HT)|{<soup> soup | <Hn> Hn}}"]
	node [shape=record style=solid]
	"HT-function":soup -- soup
	"HT-function":Hn -- Hn
	node [shape=record style=solid]
	"OO-behaviour" [label="{OO-behaviour\nB(OO, Design, Behaviour)|{<methods> methods | <internal> internal}}"]
	node [shape=record style=solid]
	"OO-behaviour":methods -- methods
	"OO-behaviour":internal -- internal
	node [shape=record style=solid]
	"FM-behaviour" [label="{FM-behaviour\nB(Design, Behaviour, FM)|{<functional-schema> functional-schema | <internal> internal}}"]
	node [shape=record style=solid]
	"FM-behaviour":"functional-schema" -- "functional-schema"
	"FM-behaviour":internal -- internal
	node [shape=record style=solid]
	"HT-behaviour" [label="{HT-behaviour\nB(Design, HT, Behaviour)|{<Hn> Hn | <Hs> Hs | <Rel> Rel | <external> external}}"]
	node [shape=record style=solid]
	"HT-behaviour":Hn -- Hn
	"HT-behaviour":Hs -- Hs
	"HT-behaviour":Rel -- Rel
	"HT-behaviour":external -- external
	node [shape=record style=solid]
	"OO-structure" [label="{OO-structure\nB(Structure, OO, Design)|{<inheritance> inheritance | <categorisation> categorisation | <containment> containment | <relational> relational | <taxonomy> taxonomy | <OO-elements> OO-elements}}"]
	node [shape=record style=solid]
	"OO-structure":inheritance -- inheritance
	"OO-structure":categorisation -- categorisation
	"OO-structure":containment -- containment
	"OO-structure":relational -- relational
	"OO-structure":taxonomy -- taxonomy
	"OO-structure":"OO-elements" -- "OO-elements"
	node [shape=record style=solid]
	"FO-structure" [label="{FO-structure\nB(Design, Structure, FO, Ontology)|{<relational> relational | <taxonomy> taxonomy | <FO-elements> FO-elements}}"]
	node [shape=record style=solid]
	"FO-structure":relational -- relational
	"FO-structure":taxonomy -- taxonomy
	"FO-structure":"FO-elements" -- "FO-elements"
	node [shape=record style=solid]
	"FM-structure" [label="{FM-structure\nB(Structure, Design, FM)|{<FM-elements> FM-elements}}"]
	node [shape=record style=solid]
	"FM-structure":"FM-elements" -- "FM-elements"
	node [shape=record style=solid]
	"HT-structure" [label="{HT-structure\nB(Design, HT, Canonical-Language, Structure, Ontology)|{<categorisation> categorisation | <containment> containment | <relational> relational | <HT-elements> HT-elements | <multilevel> multilevel | <multidimensional> multidimensional | <heterarchy> heterarchy | <hierarchy> hierarchy | <n-ary> n-ary | <taxonomy> taxonomy | <HT-elements> HT-elements}}"]
	node [shape=record style=solid]
	"HT-structure":categorisation -- categorisation
	"HT-structure":containment -- containment
	"HT-structure":relational -- relational
	"HT-structure":"HT-elements" -- "HT-elements"
	"HT-structure":multilevel -- multilevel
	"HT-structure":multidimensional -- multidimensional
	"HT-structure":heterarchy -- heterarchy
	"HT-structure":hierarchy -- hierarchy
	"HT-structure":"n-ary" -- "n-ary"
	"HT-structure":taxonomy -- taxonomy
	"HT-structure":"HT-elements" -- "HT-elements"
	node [shape=record style=rounded]
	normalise [label="{normalise\nB(Structure)|{<categorisation> categorisation | <containment> containment}}"]
	node [shape=record style=solid]
	normalise:categorisation -- categorisation
	normalise:containment -- containment
	node [shape=ellipse style=solid]
	categorisation [label=categorisation]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	containment [label=containment]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"graph" [label="graph"]
	node [shape=record style=rounded]
	structures [label="{structures\nB(Structure)|{<hierarchy> hierarchy | <heterarchy> heterarchy | <relational> relational | <graph> graph | <multilevel> multilevel | <multidimensional> multidimensional | <taxonomy> taxonomy}}"]
	node [shape=record style=solid]
	structures:hierarchy -- hierarchy
	structures:heterarchy -- heterarchy
	structures:relational -- relational
	structures:"graph" -- "graph"
	structures:multilevel -- multilevel
	structures:multidimensional -- multidimensional
	structures:taxonomy -- taxonomy
	node [shape=ellipse style=solid]
	hierarchy [label=hierarchy]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	heterarchy [label=heterarchy]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	relational [label=relational]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"graph" [label="graph"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	multilevel [label=multilevel]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	multidimensional [label="{multidimensional\nB(HT, Design, Canonical-Language, Structure, Model, Ontology)|{<n-ary> n-ary | <polygons> polygons}}"]
	node [shape=record style=solid]
	multidimensional:"n-ary" -- "n-ary"
	multidimensional:polygons -- polygons
	node [shape=record style=rounded]
	taxonomy [label="{taxonomy\nB(Design, HT, Canonical-Language, Structure, Model, OO, FO, Ontology)|{<hierarchy> hierarchy | <beta-aggregation> beta-aggregation}}"]
	node [shape=record style=solid]
	taxonomy:hierarchy -- hierarchy
	taxonomy:"beta-aggregation" -- "beta-aggregation"
	node [shape=record style=rounded]
	behaviour [label="{behaviour\nB(Behaviour)|{<internal> internal | <external> external}}"]
	node [shape=record style=solid]
	behaviour:internal -- internal
	behaviour:external -- external
	node [shape=ellipse style=solid]
	internal [label=internal]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	external [label=external]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	emergence [label=emergence]
	node [shape=record style=solid]
	complexity [label="{complexity\nB(Complexity)|{<emergence> emergence | <hierarchy> hierarchy}}"]
	node [shape=record style=solid]
	complexity:emergence -- emergence
	complexity:hierarchy -- hierarchy
	node [shape=ellipse style=solid]
	emergence [label=emergence]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"simple-modelling" [label="simple-modelling"]
	node [shape=ellipse style=solid]
	"complicated-modelling" [label="complicated-modelling"]
	node [shape=ellipse style=solid]
	qualitative [label=qualitative]
	node [shape=ellipse style=solid]
	quantitative [label=quantitative]
	node [shape=record style=rounded]
	modelling [label="{modelling\nB(Model)|{<simple-modelling> simple-modelling | <complicated-modelling> complicated-modelling | <qualitative> qualitative | <quantitative> quantitative}}"]
	node [shape=record style=solid]
	modelling:"simple-modelling" -- "simple-modelling"
	modelling:"complicated-modelling" -- "complicated-modelling"
	modelling:qualitative -- qualitative
	modelling:quantitative -- quantitative
	node [shape=ellipse style=solid]
	"simple-modelling" [label="simple-modelling"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"complicated-modelling" [label="complicated-modelling"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	qualitative [label=qualitative]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	quantitative [label=quantitative]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	model [label="{model\nB(Model)|{<abstract> abstract | <concrete> concrete}}"]
	node [shape=record style=solid]
	model:abstract -- abstract
	model:concrete -- concrete
	node [shape=ellipse style=solid]
	abstract [label=abstract]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	concrete [label=concrete]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	proof [label=proof]
	node [shape=ellipse style=solid]
	"graph-algebra" [label="graph-algebra"]
	node [shape=ellipse style=solid]
	hyperunion [label=hyperunion]
	node [shape=ellipse style=solid]
	hyperintersection [label=hyperintersection]
	node [shape=ellipse style=solid]
	"sub-Hn" [label="sub-Hn"]
	node [shape=ellipse style=solid]
	"member-of" [label="member-of"]
	node [shape=ellipse style=solid]
	conjunction [label=conjunction]
	node [shape=record style=rounded]
	AND [label="{AND\nB(Model, HT, Actions)|{<conjunction> conjunction | <alpha-aggregation> alpha-aggregation}}"]
	node [shape=ellipse style=solid]
	disjunction [label=disjunction]
	node [shape=record style=rounded]
	OR [label="{OR\nB(Model, HT, Actions)|{<disjunction> disjunction | <beta-aggregation> beta-aggregation}}"]
	node [shape=ellipse style=solid]
	NOT [label=NOT]
	node [shape=record style=rounded]
	logic [label="{logic\nB(HT, Actions, FM)|{<AND> AND | <OR> OR | <NOT> NOT}}"]
	node [shape=record style=rounded]
	"HT-algebra" [label="{HT-algebra\nB(Actions, HT)|{<hyperunion> hyperunion | <hyperintersection> hyperintersection | <sub-Hn> sub-Hn | <member-of> member-of | <logic> logic}}"]
	node [shape=ellipse style=solid]
	union [label=union]
	node [shape=ellipse style=solid]
	intersection [label=intersection]
	node [shape=ellipse style=solid]
	subset [label=subset]
	node [shape=ellipse style=solid]
	difference [label=difference]
	node [shape=record style=rounded]
	"set-algebra" [label="{set-algebra\nB(Actions, FM)|{<union> union | <intersection> intersection | <subset> subset | <difference> difference | <member-of> member-of}}"]
	node [shape=ellipse style=solid]
	"propositional-logic" [label="propositional-logic"]
	node [shape=ellipse style=solid]
	"predicate-logic" [label="predicate-logic"]
	node [shape=record style=rounded]
	mathematics [label="{mathematics\nB(Actions)|{<graph-algebra> graph-algebra | <HT-algebra> HT-algebra | <set-algebra> set-algebra | <propositional-logic> propositional-logic | <predicate-logic> predicate-logic | <logic> logic}}"]
	node [shape=record style=rounded]
	actions [label="{actions\nB(Actions)|{<proof> proof | <mathematics> mathematics}}"]
	node [shape=record style=solid]
	actions:proof -- proof
	actions:mathematics -- mathematics
	node [shape=ellipse style=solid]
	proof [label=proof]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	mathematics [label="{mathematics\nB(Actions)|{<graph-algebra> graph-algebra | <HT-algebra> HT-algebra | <set-algebra> set-algebra | <propositional-logic> propositional-logic | <predicate-logic> predicate-logic | <logic> logic}}"]
	node [shape=record style=solid]
	mathematics:"graph-algebra" -- "graph-algebra"
	mathematics:"HT-algebra" -- "HT-algebra"
	mathematics:"set-algebra" -- "set-algebra"
	mathematics:"propositional-logic" -- "propositional-logic"
	mathematics:"predicate-logic" -- "predicate-logic"
	mathematics:logic -- logic
	node [shape=record style=rounded]
	abstraction [label="{abstraction\nB(Design, Stucture, Structure, Model, OO)|{<abstract> abstract | <concrete> concrete | <instatiation> instatiation}}"]
	node [shape=record style=solid]
	abstraction:abstract -- abstract
	abstraction:concrete -- concrete
	abstraction:instatiation -- instatiation
	node [shape=ellipse style=solid]
	instatiation [label=instatiation]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	nomenclature [label=nomenclature]
	node [shape=ellipse style=solid]
	"ubiquitous-language" [label="ubiquitous-language"]
	node [shape=record style=solid]
	ontological [label="{ontological\nB(Design, HT, Model, OO, FO, Ontology)|{<nomenclature> nomenclature | <ubiquitous-language> ubiquitous-language}}"]
	node [shape=record style=solid]
	ontological:nomenclature -- nomenclature
	ontological:"ubiquitous-language" -- "ubiquitous-language"
	node [shape=ellipse style=solid]
	nomenclature [label=nomenclature]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"ubiquitous-language" [label="ubiquitous-language"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"graph-algebra" [label="graph-algebra"]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	"HT-algebra" [label="{HT-algebra\nB(Actions, HT)|{<hyperunion> hyperunion | <hyperintersection> hyperintersection | <sub-Hn> sub-Hn | <member-of> member-of | <logic> logic}}"]
	node [shape=record style=solid]
	"HT-algebra":hyperunion -- hyperunion
	"HT-algebra":hyperintersection -- hyperintersection
	"HT-algebra":"sub-Hn" -- "sub-Hn"
	"HT-algebra":"member-of" -- "member-of"
	"HT-algebra":logic -- logic
	node [shape=record style=rounded]
	"set-algebra" [label="{set-algebra\nB(Actions, FM)|{<union> union | <intersection> intersection | <subset> subset | <difference> difference | <member-of> member-of}}"]
	node [shape=record style=solid]
	"set-algebra":union -- union
	"set-algebra":intersection -- intersection
	"set-algebra":subset -- subset
	"set-algebra":difference -- difference
	"set-algebra":"member-of" -- "member-of"
	node [shape=ellipse style=solid]
	"propositional-logic" [label="propositional-logic"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"predicate-logic" [label="predicate-logic"]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	logic [label="{logic\nB(HT, Actions, FM)|{<AND> AND | <OR> OR | <NOT> NOT}}"]
	node [shape=record style=solid]
	logic:AND -- AND
	logic:OR -- OR
	logic:NOT -- NOT
	node [shape=ellipse style=solid]
	union [label=union]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	intersection [label=intersection]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	subset [label=subset]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	difference [label=difference]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"member-of" [label="member-of"]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	AND [label="{AND\nB(Model, HT, Actions)|{<conjunction> conjunction | <alpha-aggregation> alpha-aggregation}}"]
	node [shape=record style=solid]
	AND:conjunction -- conjunction
	AND:"alpha-aggregation" -- "alpha-aggregation"
	node [shape=record style=rounded]
	OR [label="{OR\nB(Model, HT, Actions)|{<disjunction> disjunction | <beta-aggregation> beta-aggregation}}"]
	node [shape=record style=solid]
	OR:disjunction -- disjunction
	OR:"beta-aggregation" -- "beta-aggregation"
	node [shape=ellipse style=solid]
	NOT [label=NOT]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"node" [label="node"]
	node [shape=record style=rounded]
	nodes [label="{nodes\nB(Orchestration)|{<node> node | <vertex> vertex | <class> class | <object> object | <schema> schema}}"]
	node [shape=record style=solid]
	nodes:"node" -- "node"
	nodes:vertex -- vertex
	nodes:class -- class
	nodes:object -- object
	nodes:schema -- schema
	node [shape=ellipse style=solid]
	"node" [label="node"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	vertex [label=vertex]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	class [label="{class\nB(Design, Structure, OO, FO, Ontology)|{<schema> schema | <universal> universal | <boundary> boundary}}"]
	node [shape=record style=solid]
	class:schema -- schema
	class:universal -- universal
	class:boundary -- boundary
	node [shape=ellipse style=solid]
	object [label=object]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	schema [label=schema]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	link [label=link]
	node [shape=ellipse style=solid]
	"edge" [label="edge"]
	node [shape=record style=rounded]
	links [label="{links|{<Rel> Rel | <association> association | <aggregation> aggregation | <composition> composition | <link> link | <edge> edge}}"]
	node [shape=record style=solid]
	links:Rel -- Rel
	links:association -- association
	links:aggregation -- aggregation
	links:composition -- composition
	links:link -- link
	links:"edge" -- "edge"
	node [shape=record style=rounded]
	Rel [label="{Rel\nB(Design, HT, Canonical-Language, Structure, Behaviour, Ontology)|{<binary> binary | <n-ary> n-ary | <DL> DL | <lambda-calc> lambda-calc | <logical> logical | <multilevel> multilevel | <alpha-aggregation> alpha-aggregation | <beta-aggregation> beta-aggregation}}"]
	node [shape=record style=solid]
	Rel:binary -- binary
	Rel:"n-ary" -- "n-ary"
	Rel:DL -- DL
	Rel:"lambda-calc" -- "lambda-calc"
	Rel:logical -- logical
	Rel:multilevel -- multilevel
	Rel:"alpha-aggregation" -- "alpha-aggregation"
	Rel:"beta-aggregation" -- "beta-aggregation"
	node [shape=record style=rounded]
	association [label="{association\nB(Structure, OO, Design)|{<aggregation> aggregation | <composition> composition | <n-ary> n-ary}}"]
	node [shape=record style=solid]
	association:aggregation -- aggregation
	association:composition -- composition
	association:"n-ary" -- "n-ary"
	node [shape=ellipse style=solid]
	aggregation [label=aggregation]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	composition [label=composition]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	link [label=link]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"edge" [label="edge"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"n-ary" [label="n-ary"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	polygons [label=polygons]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"beta-aggregation" [label="beta-aggregation"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	mereology [label=mereology]
	node [shape=ellipse style=solid]
	meronymy [label=meronymy]
	node [shape=record style=rounded]
	"part-of" [label="{part-of\nB(Model, FO, Ontology)|{<mereology> mereology | <meronymy> meronymy}}"]
	node [shape=record style=solid]
	"part-of":mereology -- mereology
	"part-of":meronymy -- meronymy
	node [shape=ellipse style=solid]
	mereology [label=mereology]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	meronymy [label=meronymy]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	diagramatic [label=diagramatic]
	node [shape=record style=solid]
	"OO-notation" [label="{OO-notation\nB(OO, Design, Notation)|{<diagramatic> diagramatic}}"]
	node [shape=ellipse style=solid]
	"data-hiding" [label="data-hiding"]
	node [shape=ellipse style=solid]
	method [label=method]
	node [shape=record style=rounded]
	encapsulation [label="{encapsulation\nB(Model, OO, Design)|{<data-hiding> data-hiding | <method> method}}"]
	node [shape=ellipse style=solid]
	"explicit-R" [label="explicit-R"]
	node [shape=record style=solid]
	ontological [label="{ontological\nB(Design, HT, Model, OO, FO, Ontology)|{<nomenclature> nomenclature | <ubiquitous-language> ubiquitous-language}}"]
	node [shape=record style=rounded]
	"OO-concepts" [label="{OO-concepts\nB(Model, OO, Design)|{<inheritance> inheritance | <abstraction> abstraction | <polymorphism> polymorphism | <encapsulation> encapsulation | <categorisation> categorisation | <containment> containment | <explicit-R> explicit-R | <ontological> ontological | <instatiation> instatiation | <concrete> concrete | <abstract> abstract}}"]
	node [shape=ellipse style=solid]
	analysis [label=analysis]
	node [shape=ellipse style=solid]
	design [label=design]
	node [shape=ellipse style=solid]
	programming [label=programming]
	node [shape=ellipse style=solid]
	"software-specification" [label="software-specification"]
	node [shape=record style=rounded]
	"OO-uses" [label="{OO-uses\nB(OO, Design)|{<analysis> analysis | <design> design | <programming> programming | <software-specification> software-specification}}"]
	node [shape=record style=rounded]
	"OO-actions" [label="{OO-actions\nB(OO, Design, Actions)|{<polymorphism> polymorphism | <proof> proof}}"]
	node [shape=record style=solid]
	"OO-design" [label="{OO-design\nB(OO, Design)|{<OO-function> OO-function | <OO-behaviour> OO-behaviour | <OO-structure> OO-structure}}"]
	node [shape=record style=solid]
	"OO-ontology" [label="{OO-ontology\nB(OO, Design, Ontology)|{<class> class | <object> object | <categorisation> categorisation | <containment> containment}}"]
	node [shape=record style=solid]
	OO [label="{OO\nB(OO, Design)|{<OO-elements> OO-elements | <OO-notation> OO-notation | <OO-concepts> OO-concepts | <OO-uses> OO-uses | <OO-actions> OO-actions | <OO-design> OO-design | <OO-ontology> OO-ontology}}"]
	node [shape=ellipse style=solid]
	mathematical [label=mathematical]
	node [shape=record style=solid]
	"FO-notation" [label="{FO-notation\nB(FO, Notation, Ontology)|{<mathematical> mathematical}}"]
	node [shape=record style=rounded]
	"part-of" [label="{part-of\nB(Model, FO, Ontology)|{<mereology> mereology | <meronymy> meronymy}}"]
	node [shape=record style=rounded]
	"FO-concepts" [label="{FO-concepts\nB(Model, FO, Ontology)|{<taxonomy> taxonomy | <part-of> part-of | <categorisation> categorisation | <containment> containment | <explicit-R> explicit-R | <ontological> ontological | <instatiation> instatiation | <concrete> concrete | <abstract> abstract}}"]
	node [shape=record style=rounded]
	"FO-uses" [label="{FO-uses\nB(FO, Ontology)|{<nomenclature> nomenclature | <ubiquitous-language> ubiquitous-language}}"]
	node [shape=ellipse style=solid]
	search [label=search]
	node [shape=record style=rounded]
	"FO-actions" [label="{FO-actions\nB(FO, Actions, Ontology)|{<search> search | <graph-algebra> graph-algebra | <emergence> emergence | <proof> proof}}"]
	node [shape=record style=solid]
	"FO-design" [label="{FO-design\nB(FO, Design, Ontology)|{<FO-structure> FO-structure}}"]
	node [shape=record style=solid]
	FO [label="{FO\nB(FO, Ontology)|{<FO-elements> FO-elements | <FO-notation> FO-notation | <FO-concepts> FO-concepts | <FO-uses> FO-uses | <FO-actions> FO-actions | <FO-design> FO-design}}"]
	node [shape=record style=solid]
	"FM-notation" [label="{FM-notation\nB(Notation, FM)|{<mathematical> mathematical}}"]
	node [shape=record style=rounded]
	"FM-concepts" [label="{FM-concepts\nB(Model, FM)|{<containment> containment | <explicit-R> explicit-R | <abstract> abstract}}"]
	node [shape=record style=rounded]
	"FM-uses" [label="{FM-uses\nB(FM)|{<software-specification> software-specification}}"]
	node [shape=record style=rounded]
	"FM-actions" [label="{FM-actions\nB(Actions, FM)|{<proof> proof | <set-algebra> set-algebra | <propositional-logic> propositional-logic | <predicate-logic> predicate-logic | <logic> logic}}"]
	node [shape=record style=solid]
	"FM-design" [label="{FM-design\nB(Design, FM)|{<FM-behaviour> FM-behaviour | <FM-structure> FM-structure}}"]
	node [shape=record style=solid]
	FM [label="{FM\nB(FM)|{<FM-elements> FM-elements | <FM-notation> FM-notation | <FM-concepts> FM-concepts | <FM-uses> FM-uses | <FM-actions> FM-actions | <FM-design> FM-design}}"]
	node [shape=record style=rounded]
	alternatives [label="{alternatives|{<OO> OO | <FO> FO | <FM> FM}}"]
	node [shape=record style=solid]
	alternatives:OO -- OO
	alternatives:FO -- FO
	alternatives:FM -- FM
	node [shape=record style=solid]
	OO [label="{OO\nB(OO, Design)|{<OO-elements> OO-elements | <OO-notation> OO-notation | <OO-concepts> OO-concepts | <OO-uses> OO-uses | <OO-actions> OO-actions | <OO-design> OO-design | <OO-ontology> OO-ontology}}"]
	node [shape=record style=solid]
	OO:"OO-elements" -- "OO-elements"
	OO:"OO-notation" -- "OO-notation"
	OO:"OO-concepts" -- "OO-concepts"
	OO:"OO-uses" -- "OO-uses"
	OO:"OO-actions" -- "OO-actions"
	OO:"OO-design" -- "OO-design"
	OO:"OO-ontology" -- "OO-ontology"
	node [shape=record style=solid]
	FO [label="{FO\nB(FO, Ontology)|{<FO-elements> FO-elements | <FO-notation> FO-notation | <FO-concepts> FO-concepts | <FO-uses> FO-uses | <FO-actions> FO-actions | <FO-design> FO-design}}"]
	node [shape=record style=solid]
	FO:"FO-elements" -- "FO-elements"
	FO:"FO-notation" -- "FO-notation"
	FO:"FO-concepts" -- "FO-concepts"
	FO:"FO-uses" -- "FO-uses"
	FO:"FO-actions" -- "FO-actions"
	FO:"FO-design" -- "FO-design"
	node [shape=record style=solid]
	FM [label="{FM\nB(FM)|{<FM-elements> FM-elements | <FM-notation> FM-notation | <FM-concepts> FM-concepts | <FM-uses> FM-uses | <FM-actions> FM-actions | <FM-design> FM-design}}"]
	node [shape=record style=solid]
	FM:"FM-elements" -- "FM-elements"
	FM:"FM-notation" -- "FM-notation"
	FM:"FM-concepts" -- "FM-concepts"
	FM:"FM-uses" -- "FM-uses"
	FM:"FM-actions" -- "FM-actions"
	FM:"FM-design" -- "FM-design"
	node [shape=ellipse style=solid]
	integrity [label=integrity]
	node [shape=ellipse style=solid]
	"impiicit-R" [label="impiicit-R"]
	node [shape=record style=rounded]
	concepts [label="{concepts|{<integrity> integrity | <proof> proof | <categorisation> categorisation | <containment> containment | <impiicit-R> impiicit-R | <explicit-R> explicit-R}}"]
	node [shape=record style=solid]
	concepts:integrity -- integrity
	concepts:proof -- proof
	concepts:categorisation -- categorisation
	concepts:containment -- containment
	concepts:"impiicit-R" -- "impiicit-R"
	concepts:"explicit-R" -- "explicit-R"
	node [shape=ellipse style=solid]
	integrity [label=integrity]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"impiicit-R" [label="impiicit-R"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"explicit-R" [label="explicit-R"]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	"OO-elements" [label="{OO-elements\nB(Structure, OO, Design)|{<class> class | <object> object | <association> association | <n-ary> n-ary}}"]
	node [shape=record style=solid]
	"OO-elements":class -- class
	"OO-elements":object -- object
	"OO-elements":association -- association
	"OO-elements":"n-ary" -- "n-ary"
	node [shape=record style=solid]
	"OO-notation" [label="{OO-notation\nB(OO, Design, Notation)|{<diagramatic> diagramatic}}"]
	node [shape=record style=solid]
	"OO-notation":diagramatic -- diagramatic
	node [shape=record style=rounded]
	"OO-concepts" [label="{OO-concepts\nB(Model, OO, Design)|{<inheritance> inheritance | <abstraction> abstraction | <polymorphism> polymorphism | <encapsulation> encapsulation | <categorisation> categorisation | <containment> containment | <explicit-R> explicit-R | <ontological> ontological | <instatiation> instatiation | <concrete> concrete | <abstract> abstract}}"]
	node [shape=record style=solid]
	"OO-concepts":inheritance -- inheritance
	"OO-concepts":abstraction -- abstraction
	"OO-concepts":polymorphism -- polymorphism
	"OO-concepts":encapsulation -- encapsulation
	"OO-concepts":categorisation -- categorisation
	"OO-concepts":containment -- containment
	"OO-concepts":"explicit-R" -- "explicit-R"
	"OO-concepts":ontological -- ontological
	"OO-concepts":instatiation -- instatiation
	"OO-concepts":concrete -- concrete
	"OO-concepts":abstract -- abstract
	node [shape=record style=rounded]
	"OO-uses" [label="{OO-uses\nB(OO, Design)|{<analysis> analysis | <design> design | <programming> programming | <software-specification> software-specification}}"]
	node [shape=record style=solid]
	"OO-uses":analysis -- analysis
	"OO-uses":design -- design
	"OO-uses":programming -- programming
	"OO-uses":"software-specification" -- "software-specification"
	node [shape=record style=rounded]
	"OO-actions" [label="{OO-actions\nB(OO, Design, Actions)|{<polymorphism> polymorphism | <proof> proof}}"]
	node [shape=record style=solid]
	"OO-actions":polymorphism -- polymorphism
	"OO-actions":proof -- proof
	node [shape=record style=solid]
	"OO-design" [label="{OO-design\nB(OO, Design)|{<OO-function> OO-function | <OO-behaviour> OO-behaviour | <OO-structure> OO-structure}}"]
	node [shape=record style=solid]
	"OO-design":"OO-function" -- "OO-function"
	"OO-design":"OO-behaviour" -- "OO-behaviour"
	"OO-design":"OO-structure" -- "OO-structure"
	node [shape=record style=solid]
	"OO-ontology" [label="{OO-ontology\nB(OO, Design, Ontology)|{<class> class | <object> object | <categorisation> categorisation | <containment> containment}}"]
	node [shape=record style=solid]
	"OO-ontology":class -- class
	"OO-ontology":object -- object
	"OO-ontology":categorisation -- categorisation
	"OO-ontology":containment -- containment
	node [shape=ellipse style=solid]
	diagramatic [label=diagramatic]
	node [shape=record style=solid]
	node [shape=record style=solid]
	inheritance [label="{inheritance\nB(Design, Structure, Model, OO)|{<hierarchy> hierarchy | <polymorphism> polymorphism | <abstraction> abstraction}}"]
	node [shape=record style=solid]
	inheritance:hierarchy -- hierarchy
	inheritance:polymorphism -- polymorphism
	inheritance:abstraction -- abstraction
	node [shape=ellipse style=solid]
	polymorphism [label=polymorphism]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	encapsulation [label="{encapsulation\nB(Model, OO, Design)|{<data-hiding> data-hiding | <method> method}}"]
	node [shape=record style=solid]
	encapsulation:"data-hiding" -- "data-hiding"
	encapsulation:method -- method
	node [shape=ellipse style=solid]
	analysis [label=analysis]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	design [label=design]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	programming [label=programming]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"software-specification" [label="software-specification"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"use-cases" [label="use-cases"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	methods [label=methods]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	hierarchical [label=hierarchical]
	node [shape=ellipse style=solid]
	heterarchical [label=heterarchical]
	node [shape=record style=rounded]
	"OO-structures" [label="{OO-structures\nB(Structure)|{<graph> graph | <hierarchical> hierarchical | <heterarchical> heterarchical}}"]
	node [shape=record style=solid]
	"OO-structures":"graph" -- "graph"
	"OO-structures":hierarchical -- hierarchical
	"OO-structures":heterarchical -- heterarchical
	node [shape=ellipse style=solid]
	hierarchical [label=hierarchical]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	heterarchical [label=heterarchical]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	"FM-elements" [label="{FM-elements\nB(Structure, Design, FM)|{<schema> schema}}"]
	node [shape=record style=solid]
	"FM-elements":schema -- schema
	node [shape=record style=solid]
	"FM-notation" [label="{FM-notation\nB(Notation, FM)|{<mathematical> mathematical}}"]
	node [shape=record style=solid]
	"FM-notation":mathematical -- mathematical
	node [shape=record style=rounded]
	"FM-concepts" [label="{FM-concepts\nB(Model, FM)|{<containment> containment | <explicit-R> explicit-R | <abstract> abstract}}"]
	node [shape=record style=solid]
	"FM-concepts":containment -- containment
	"FM-concepts":"explicit-R" -- "explicit-R"
	"FM-concepts":abstract -- abstract
	node [shape=record style=rounded]
	"FM-uses" [label="{FM-uses\nB(FM)|{<software-specification> software-specification}}"]
	node [shape=record style=solid]
	"FM-uses":"software-specification" -- "software-specification"
	node [shape=record style=rounded]
	"FM-actions" [label="{FM-actions\nB(Actions, FM)|{<proof> proof | <set-algebra> set-algebra | <propositional-logic> propositional-logic | <predicate-logic> predicate-logic | <logic> logic}}"]
	node [shape=record style=solid]
	"FM-actions":proof -- proof
	"FM-actions":"set-algebra" -- "set-algebra"
	"FM-actions":"propositional-logic" -- "propositional-logic"
	"FM-actions":"predicate-logic" -- "predicate-logic"
	"FM-actions":logic -- logic
	node [shape=record style=solid]
	"FM-design" [label="{FM-design\nB(Design, FM)|{<FM-behaviour> FM-behaviour | <FM-structure> FM-structure}}"]
	node [shape=record style=solid]
	"FM-design":"FM-behaviour" -- "FM-behaviour"
	"FM-design":"FM-structure" -- "FM-structure"
	node [shape=ellipse style=solid]
	mathematical [label=mathematical]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"functional-schema" [label="functional-schema"]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	"FM-structures" [label="{FM-structures\nB(Structure)|{<hierarchical> hierarchical | <heterarchical> heterarchical}}"]
	node [shape=record style=solid]
	"FM-structures":hierarchical -- hierarchical
	"FM-structures":heterarchical -- heterarchical
	node [shape=record style=rounded]
	"FO-elements" [label="{FO-elements\nB(Design, Structure, FO, Ontology)|{<object> object | <class> class | <binary> binary | <DL> DL}}"]
	node [shape=record style=solid]
	"FO-elements":object -- object
	"FO-elements":class -- class
	"FO-elements":binary -- binary
	"FO-elements":DL -- DL
	node [shape=record style=solid]
	"FO-notation" [label="{FO-notation\nB(FO, Notation, Ontology)|{<mathematical> mathematical}}"]
	node [shape=record style=solid]
	"FO-notation":mathematical -- mathematical
	node [shape=record style=rounded]
	"FO-concepts" [label="{FO-concepts\nB(Model, FO, Ontology)|{<taxonomy> taxonomy | <part-of> part-of | <categorisation> categorisation | <containment> containment | <explicit-R> explicit-R | <ontological> ontological | <instatiation> instatiation | <concrete> concrete | <abstract> abstract}}"]
	node [shape=record style=solid]
	"FO-concepts":taxonomy -- taxonomy
	"FO-concepts":"part-of" -- "part-of"
	"FO-concepts":categorisation -- categorisation
	"FO-concepts":containment -- containment
	"FO-concepts":"explicit-R" -- "explicit-R"
	"FO-concepts":ontological -- ontological
	"FO-concepts":instatiation -- instatiation
	"FO-concepts":concrete -- concrete
	"FO-concepts":abstract -- abstract
	node [shape=record style=rounded]
	"FO-uses" [label="{FO-uses\nB(FO, Ontology)|{<nomenclature> nomenclature | <ubiquitous-language> ubiquitous-language}}"]
	node [shape=record style=solid]
	"FO-uses":nomenclature -- nomenclature
	"FO-uses":"ubiquitous-language" -- "ubiquitous-language"
	node [shape=record style=rounded]
	"FO-actions" [label="{FO-actions\nB(FO, Actions, Ontology)|{<search> search | <graph-algebra> graph-algebra | <emergence> emergence | <proof> proof}}"]
	node [shape=record style=solid]
	"FO-actions":search -- search
	"FO-actions":"graph-algebra" -- "graph-algebra"
	"FO-actions":emergence -- emergence
	"FO-actions":proof -- proof
	node [shape=record style=solid]
	"FO-design" [label="{FO-design\nB(FO, Design, Ontology)|{<FO-structure> FO-structure}}"]
	node [shape=record style=solid]
	"FO-design":"FO-structure" -- "FO-structure"
	node [shape=ellipse style=solid]
	search [label=search]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	"FO-structures" [label="{FO-structures\nB(Structure)|{<graph> graph | <hierarchical> hierarchical | <heterarchical> heterarchical}}"]
	node [shape=record style=solid]
	"FO-structures":"graph" -- "graph"
	"FO-structures":hierarchical -- hierarchical
	"FO-structures":heterarchical -- heterarchical
	node [shape=ellipse style=solid]
	binary [label=binary]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	DL [label=DL]
	node [shape=record style=solid]
	node [shape=record style=solid]
	"HT-notation" [label="{HT-notation\nB(Notation, HT)|{<mathematical> mathematical}}"]
	node [shape=ellipse style=solid]
	backcloth [label=backcloth]
	node [shape=ellipse style=solid]
	"phi-function" [label="phi-function"]
	node [shape=ellipse style=solid]
	"psi-function" [label="psi-function"]
	node [shape=record style=rounded]
	traffic [label="{traffic\nB(Model, HT, Orchestration)|{<phi-function> phi-function | <psi-function> psi-function}}"]
	node [shape=ellipse style=solid]
	explicit [label=explicit]
	node [shape=ellipse style=solid]
	implicit [label=implicit]
	node [shape=record style=rounded]
	"HT-concepts" [label="{HT-concepts\nB(Model, HT)|{<backcloth> backcloth | <traffic> traffic | <soup> soup | <n-ary> n-ary | <multilevel> multilevel | <multidimensional> multidimensional | <AND> AND | <OR> OR | <categorisation> categorisation | <containment> containment | <relational> relational | <integrity> integrity | <explicit> explicit | <implicit> implicit | <ontological> ontological | <concrete> concrete | <abstract> abstract}}"]
	node [shape=ellipse style=solid]
	"extended-ontology" [label="extended-ontology"]
	node [shape=ellipse style=solid]
	orchestration [label=orchestration]
	node [shape=ellipse style=solid]
	"canonical-language" [label="canonical-language"]
	node [shape=record style=rounded]
	"HT-uses" [label="{HT-uses\nB(HT)|{<extended-ontology> extended-ontology | <orchestration> orchestration | <analysis> analysis | <design> design | <canonical-language> canonical-language}}"]
	node [shape=record style=rounded]
	"HT-actions" [label="{HT-actions\nB(Actions, HT)|{<search> search | <emergence> emergence | <HT-algebra> HT-algebra}}"]
	node [shape=record style=solid]
	"HT-design" [label="{HT-design\nB(Design, HT)|{<HT-function> HT-function | <HT-behaviour> HT-behaviour | <HT-structure> HT-structure}}"]
	node [shape=record style=solid]
	"HT-ochestration" [label="{HT-ochestration\nB(Orchestration, HT)|{<HT-elements> HT-elements | <traffic> traffic}}"]
	node [shape=record style=solid]
	HT [label="{HT\nB(HT)|{<HT-elements> HT-elements | <HT-notation> HT-notation | <HT-concepts> HT-concepts | <HT-uses> HT-uses | <HT-actions> HT-actions | <HT-design> HT-design | <HT-ochestration> HT-ochestration}}"]
	node [shape=record style=solid]
	HT:"HT-elements" -- "HT-elements"
	HT:"HT-notation" -- "HT-notation"
	HT:"HT-concepts" -- "HT-concepts"
	HT:"HT-uses" -- "HT-uses"
	HT:"HT-actions" -- "HT-actions"
	HT:"HT-design" -- "HT-design"
	HT:"HT-ochestration" -- "HT-ochestration"
	node [shape=record style=rounded]
	"HT-elements" [label="{HT-elements\nB(HT, Design, Canonical-Language, Orchestration, Structure, Ontology)|{<Hn> Hn | <Hs> Hs | <simplex> simplex | <vertex> vertex | <Rel> Rel | <time> time | <alpha-aggregation> alpha-aggregation | <beta-aggregation> beta-aggregation | <boundary> boundary | <property> property}}"]
	node [shape=record style=solid]
	"HT-elements":Hn -- Hn
	"HT-elements":Hs -- Hs
	"HT-elements":simplex -- simplex
	"HT-elements":vertex -- vertex
	"HT-elements":Rel -- Rel
	"HT-elements":time -- time
	"HT-elements":"alpha-aggregation" -- "alpha-aggregation"
	"HT-elements":"beta-aggregation" -- "beta-aggregation"
	"HT-elements":boundary -- boundary
	"HT-elements":property -- property
	node [shape=record style=solid]
	"HT-notation" [label="{HT-notation\nB(Notation, HT)|{<mathematical> mathematical}}"]
	node [shape=record style=solid]
	"HT-notation":mathematical -- mathematical
	node [shape=record style=rounded]
	"HT-concepts" [label="{HT-concepts\nB(Model, HT)|{<backcloth> backcloth | <traffic> traffic | <soup> soup | <n-ary> n-ary | <multilevel> multilevel | <multidimensional> multidimensional | <AND> AND | <OR> OR | <categorisation> categorisation | <containment> containment | <relational> relational | <integrity> integrity | <explicit> explicit | <implicit> implicit | <ontological> ontological | <concrete> concrete | <abstract> abstract}}"]
	node [shape=record style=solid]
	"HT-concepts":backcloth -- backcloth
	"HT-concepts":traffic -- traffic
	"HT-concepts":soup -- soup
	"HT-concepts":"n-ary" -- "n-ary"
	"HT-concepts":multilevel -- multilevel
	"HT-concepts":multidimensional -- multidimensional
	"HT-concepts":AND -- AND
	"HT-concepts":OR -- OR
	"HT-concepts":categorisation -- categorisation
	"HT-concepts":containment -- containment
	"HT-concepts":relational -- relational
	"HT-concepts":integrity -- integrity
	"HT-concepts":explicit -- explicit
	"HT-concepts":implicit -- implicit
	"HT-concepts":ontological -- ontological
	"HT-concepts":concrete -- concrete
	"HT-concepts":abstract -- abstract
	node [shape=record style=rounded]
	"HT-uses" [label="{HT-uses\nB(HT)|{<extended-ontology> extended-ontology | <orchestration> orchestration | <analysis> analysis | <design> design | <canonical-language> canonical-language}}"]
	node [shape=record style=solid]
	"HT-uses":"extended-ontology" -- "extended-ontology"
	"HT-uses":orchestration -- orchestration
	"HT-uses":analysis -- analysis
	"HT-uses":design -- design
	"HT-uses":"canonical-language" -- "canonical-language"
	node [shape=record style=rounded]
	"HT-actions" [label="{HT-actions\nB(Actions, HT)|{<search> search | <emergence> emergence | <HT-algebra> HT-algebra}}"]
	node [shape=record style=solid]
	"HT-actions":search -- search
	"HT-actions":emergence -- emergence
	"HT-actions":"HT-algebra" -- "HT-algebra"
	node [shape=record style=solid]
	"HT-design" [label="{HT-design\nB(Design, HT)|{<HT-function> HT-function | <HT-behaviour> HT-behaviour | <HT-structure> HT-structure}}"]
	node [shape=record style=solid]
	"HT-design":"HT-function" -- "HT-function"
	"HT-design":"HT-behaviour" -- "HT-behaviour"
	"HT-design":"HT-structure" -- "HT-structure"
	node [shape=record style=solid]
	"HT-ochestration" [label="{HT-ochestration\nB(Orchestration, HT)|{<HT-elements> HT-elements | <traffic> traffic}}"]
	node [shape=record style=solid]
	"HT-ochestration":"HT-elements" -- "HT-elements"
	"HT-ochestration":traffic -- traffic
	node [shape=ellipse style=solid]
	backcloth [label=backcloth]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	traffic [label="{traffic\nB(Model, HT, Orchestration)|{<phi-function> phi-function | <psi-function> psi-function}}"]
	node [shape=record style=solid]
	traffic:"phi-function" -- "phi-function"
	traffic:"psi-function" -- "psi-function"
	node [shape=record style=rounded]
	soup [label="{soup\nB(Design, HT, Structure, Model, Function)|{<hierarchy> hierarchy | <heterarchy> heterarchy}}"]
	node [shape=record style=solid]
	soup:hierarchy -- hierarchy
	soup:heterarchy -- heterarchy
	node [shape=ellipse style=solid]
	explicit [label=explicit]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	implicit [label=implicit]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"extended-ontology" [label="extended-ontology"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	orchestration [label=orchestration]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"canonical-language" [label="canonical-language"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	hyperunion [label=hyperunion]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	hyperintersection [label=hyperintersection]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"sub-Hn" [label="sub-Hn"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	Hn [label=Hn]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	Hs [label=Hs]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	multidimentional [label=multidimentional]
	node [shape=record style=rounded]
	"HT-structures" [label="{HT-structures\nB(Structure)|{<graph> graph | <hierarchical> hierarchical | <heterarchical> heterarchical | <multilevel> multilevel | <multidimentional> multidimentional}}"]
	node [shape=record style=solid]
	"HT-structures":"graph" -- "graph"
	"HT-structures":hierarchical -- hierarchical
	"HT-structures":heterarchical -- heterarchical
	"HT-structures":multilevel -- multilevel
	"HT-structures":multidimentional -- multidimentional
	node [shape=ellipse style=solid]
	multidimentional [label=multidimentional]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	simplex [label=simplex]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	time [label=time]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"alpha-aggregation" [label="alpha-aggregation"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	boundary [label=boundary]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	property [label=property]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	nodes [label="{nodes\nB(Orchestration)|{<node> node | <vertex> vertex | <class> class | <object> object | <schema> schema}}"]
	node [shape=ellipse style=solid]
	"directed-edge" [label="directed-edge"]
	node [shape=record style=solid]
	"DAG-elements" [label="{DAG-elements\nB(Orchestration)|{<nodes> nodes | <directed-edge> directed-edge}}"]
	node [shape=record style=solid]
	"DAG-concepts" [label="{DAG-concepts\nB(Orchestration)|{<graph> graph}}"]
	node [shape=record style=solid]
	DAG [label="{DAG\nB(Orchestration)|{<DAG-elements> DAG-elements | <DAG-concepts> DAG-concepts}}"]
	node [shape=record style=solid]
	DAG:"DAG-elements" -- "DAG-elements"
	DAG:"DAG-concepts" -- "DAG-concepts"
	node [shape=record style=solid]
	"DAG-elements" [label="{DAG-elements\nB(Orchestration)|{<nodes> nodes | <directed-edge> directed-edge}}"]
	node [shape=record style=solid]
	"DAG-elements":nodes -- nodes
	"DAG-elements":"directed-edge" -- "directed-edge"
	node [shape=record style=solid]
	"DAG-concepts" [label="{DAG-concepts\nB(Orchestration)|{<graph> graph}}"]
	node [shape=record style=solid]
	"DAG-concepts":"graph" -- "graph"
	node [shape=ellipse style=solid]
	"directed-edge" [label="directed-edge"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"phi-function" [label="phi-function"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"psi-function" [label="psi-function"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	universal [label=universal]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	"data-hiding" [label="data-hiding"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	method [label=method]
	node [shape=record style=solid]
	node [shape=record style=rounded]
	relations [label="{relations\nB(Structure)|{<binary> binary | <n-ary> n-ary | <inheritance> inheritance | <association> association | <explicit> explicit | <implicit> implicit}}"]
	node [shape=record style=solid]
	relations:binary -- binary
	relations:"n-ary" -- "n-ary"
	relations:inheritance -- inheritance
	relations:association -- association
	relations:explicit -- explicit
	relations:implicit -- implicit
	node [shape=record style=rounded]
	notation [label="{notation\nB(Notation)|{<mathematical> mathematical | <diagramatic> diagramatic}}"]
	node [shape=record style=solid]
	notation:mathematical -- mathematical
	notation:diagramatic -- diagramatic
	node [shape=ellipse style=solid]
	"lambda-calc" [label="lambda-calc"]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	logical [label=logical]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	conjunction [label=conjunction]
	node [shape=record style=solid]
	node [shape=ellipse style=solid]
	disjunction [label=disjunction]
	node [shape=record style=solid]
	rankdir=LR
}
